// --- 1. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Element ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ---
const registerButton = document.querySelector('.confirm-btn'); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
const usernameInput = document.querySelector('#username');
const emailInput = document.querySelector('#email'); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
const passwordInput = document.querySelector('#password');
const togglePassword = document.querySelector('#togglePassword');

// Error message elements
const usernameError = document.querySelector('#username-error');
const emailError = document.querySelector('#email-error'); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
const passwordError = document.querySelector('#password-error');

// --- Toggle Password Functionality (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
togglePassword.addEventListener('click', function () {
    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordInput.setAttribute('type', type);
    this.classList.toggle('fa-eye');
    this.classList.toggle('fa-eye-slash');
});

// --- Validation Functionality (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà) ---
registerButton.addEventListener('click', function (event) {
    event.preventDefault();

    // --- 2. ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏ß‡∏° email) ---
    usernameInput.classList.remove('error');
    emailInput.classList.remove('error'); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
    passwordInput.classList.remove('error');
    
    usernameError.classList.remove('show');
    emailError.classList.remove('show'); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
    passwordError.classList.remove('show');

    // --- 3. ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡∏£‡∏ß‡∏° email) ---
    const username = usernameInput.value.trim();
    const email = emailInput.value.trim(); // << ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
    const password = passwordInput.value.trim();
    let isValid = true;

    // Check Username
    if (username === '') {
        usernameError.textContent = 'Please enter your username.';
        usernameError.classList.add('show');
        usernameInput.classList.add('error');
        isValid = false;
    }

    // Check Email
    if (email === '') {
        emailError.textContent = 'Please enter your email address.';
        emailError.classList.add('show');
        emailInput.classList.add('error');
        isValid = false;
    } else if (!/^\S+@\S+\.\S+$/.test(email)) { // << ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏• (Email Format Validation)
        emailError.textContent = 'Please enter a valid email format.';
        emailError.classList.add('show');
        emailInput.classList.add('error');
        isValid = false;
    }

    // Check Password
    if (password === '') {
        passwordError.textContent = 'Please enter your password.';
        passwordError.classList.add('show');
        passwordInput.classList.add('error');
        isValid = false;
    }

    // --- 4. ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡πá‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ---
    // if (isValid) {
    //     console.log('Validation passed. Redirecting...');
    //     // ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏£‡∏¥‡∏á ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏ó‡∏µ‡πà Backend
    //     window.location.href = 'homepage.html';
    //     alert('Registration form is valid!');
    // }
});
document.addEventListener("DOMContentLoaded", function () {
    const loginButton = document.querySelector(".confirm-btn");

    loginButton.addEventListener("click", async (e) => {
        e.preventDefault();

        const username = document.getElementById("username").value.trim();
        const email = document.getElementById("email").value.trim();
        const password = document.getElementById("password").value.trim();

        if (!username || !email || !password) {
            alert("‚ö†Ô∏è Please fill in all fields before logging in.");
            return;
        }

        // Build request payload
        const loginData = {
            username: username,
            email: email,
            password: password
        };

        try {
            const response = await fetch("http://localhost:8080/api/users/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(loginData)
            });

            if (!response.ok) {
                const errorData = await response.json();
                alert("‚ùå Login failed: " + (errorData.message || "Invalid credentials"));
                return;
            }

            const user = await response.json();

            alert(`‚úÖ Welcome back, ${user.username}!`);
            localStorage.setItem("user", JSON.stringify(user));

            // Redirect to homepage
            window.location.href = "homepage.html";

        } catch (error) {
            console.error("Error:", error);
            alert("üö® Server error, please try again later.");
        }
    });
});
